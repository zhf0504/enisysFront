{"ast":null,"code":"// src/composables/useAuth.js\nimport { ref } from 'vue';\nimport { useMenuisSp } from './useMenuisSp';\n\n// ユーザーをnullで初期化する\nconst user = ref(null); // ユーザーをnullで初期化\nconst useMenu = useMenuisSp();\n// ログイン関数を定義する\nconst login = userData => {\n  // ユーザー情報を更新する\n  user.value = userData; // ユーザー情報を更新\n  // ユーザー情報をsessionStorageに保存する\n  sessionStorage.setItem('user', JSON.stringify(userData)); // sessionStorageに保存\n};\n\n// ログアウト関数を定義する\nconst logout = () => {\n  // ユーザー情報を削除する\n  user.value = null; // ユーザー情報をnullに設定\n  // sessionStorageからユーザー情報を削除する\n  sessionStorage.removeItem('user'); // sessionStorageから削除\n  //メニュー表示フラグを初期化\n  useMenu.isOpenMenuSP.value = false;\n  useMenu.isOpenProfileMenu.value = false;\n};\n\n// ユーザー情報を初期化する関数を定義する\nconst initializeUser = () => {\n  const storedUser = sessionStorage.getItem('user'); // sessionStorageからユーザー情報を取得\n  if (storedUser) {\n    user.value = JSON.parse(storedUser); // 取得したユーザー情報をオブジェクトに変換して設定\n  }\n};\n\n// useAuth関数をエクスポートする\nexport function useAuth() {\n  return {\n    user,\n    // ユーザー情報を返す\n    login,\n    // ログイン関数を返す\n    logout,\n    // ログアウト関数を返す\n    initializeUser // ユーザー情報を初期化する関数を返す\n  };\n}","map":{"version":3,"names":["ref","useMenuisSp","user","useMenu","login","userData","value","sessionStorage","setItem","JSON","stringify","logout","removeItem","isOpenMenuSP","isOpenProfileMenu","initializeUser","storedUser","getItem","parse","useAuth"],"sources":["C:/Users/zhenghoufeng/Desktop/project/enisysFront1/src/composables/userAuth.js"],"sourcesContent":["// src/composables/useAuth.js\r\nimport { ref } from 'vue';\r\nimport { useMenuisSp } from './useMenuisSp';\r\n\r\n// ユーザーをnullで初期化する\r\nconst user = ref(null); // ユーザーをnullで初期化\r\nconst useMenu = useMenuisSp();\r\n// ログイン関数を定義する\r\nconst login = (userData) => {\r\n  // ユーザー情報を更新する\r\n  user.value = userData; // ユーザー情報を更新\r\n  // ユーザー情報をsessionStorageに保存する\r\n  sessionStorage.setItem('user', JSON.stringify(userData)); // sessionStorageに保存\r\n};\r\n\r\n// ログアウト関数を定義する\r\nconst logout = () => {\r\n  // ユーザー情報を削除する\r\n  user.value = null; // ユーザー情報をnullに設定\r\n  // sessionStorageからユーザー情報を削除する\r\n  sessionStorage.removeItem('user'); // sessionStorageから削除\r\n  //メニュー表示フラグを初期化\r\n  useMenu.isOpenMenuSP.value = false;\r\n  useMenu.isOpenProfileMenu.value = false;\r\n};\r\n\r\n// ユーザー情報を初期化する関数を定義する\r\nconst initializeUser = () => {\r\n  const storedUser = sessionStorage.getItem('user'); // sessionStorageからユーザー情報を取得\r\n  if (storedUser) {\r\n    user.value = JSON.parse(storedUser); // 取得したユーザー情報をオブジェクトに変換して設定\r\n  }\r\n};\r\n\r\n// useAuth関数をエクスポートする\r\nexport function useAuth() {\r\n  return {\r\n    user, // ユーザー情報を返す\r\n    login, // ログイン関数を返す\r\n    logout, // ログアウト関数を返す\r\n    initializeUser // ユーザー情報を初期化する関数を返す\r\n  };\r\n}\r\n"],"mappings":"AAAA;AACA,SAASA,GAAG,QAAQ,KAAK;AACzB,SAASC,WAAW,QAAQ,eAAe;;AAE3C;AACA,MAAMC,IAAI,GAAGF,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;AACxB,MAAMG,OAAO,GAAGF,WAAW,CAAC,CAAC;AAC7B;AACA,MAAMG,KAAK,GAAIC,QAAQ,IAAK;EAC1B;EACAH,IAAI,CAACI,KAAK,GAAGD,QAAQ,CAAC,CAAC;EACvB;EACAE,cAAc,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACL,QAAQ,CAAC,CAAC,CAAC,CAAC;AAC5D,CAAC;;AAED;AACA,MAAMM,MAAM,GAAGA,CAAA,KAAM;EACnB;EACAT,IAAI,CAACI,KAAK,GAAG,IAAI,CAAC,CAAC;EACnB;EACAC,cAAc,CAACK,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;EACnC;EACAT,OAAO,CAACU,YAAY,CAACP,KAAK,GAAG,KAAK;EAClCH,OAAO,CAACW,iBAAiB,CAACR,KAAK,GAAG,KAAK;AACzC,CAAC;;AAED;AACA,MAAMS,cAAc,GAAGA,CAAA,KAAM;EAC3B,MAAMC,UAAU,GAAGT,cAAc,CAACU,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;EACnD,IAAID,UAAU,EAAE;IACdd,IAAI,CAACI,KAAK,GAAGG,IAAI,CAACS,KAAK,CAACF,UAAU,CAAC,CAAC,CAAC;EACvC;AACF,CAAC;;AAED;AACA,OAAO,SAASG,OAAOA,CAAA,EAAG;EACxB,OAAO;IACLjB,IAAI;IAAE;IACNE,KAAK;IAAE;IACPO,MAAM;IAAE;IACRI,cAAc,CAAC;EACjB,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}