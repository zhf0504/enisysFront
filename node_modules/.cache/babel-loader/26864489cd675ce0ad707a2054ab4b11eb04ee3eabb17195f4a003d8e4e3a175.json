{"ast":null,"code":"import { onBeforeUnmount, onMounted, reactive } from 'vue';\nimport { useAuth } from './composables/userAuth';\nimport { useMenuisSp } from './composables/useMenuisSp';\nimport { profileMenu } from './composables/profileMenu';\nimport HeaderLayout from './components/HeaderLayout.vue';\nimport CMN002_Menu from './components/CMN002_Menu.vue';\nimport CMN002_MenuSP from './components/CMN002_MenuSP.vue';\nimport CMN002_MenuProfile from './components/CMN002_MenuProfile.vue';\nimport store from './store';\nexport default {\n  name: 'App',\n  components: {\n    HeaderLayout,\n    CMN002_Menu,\n    CMN002_MenuSP,\n    CMN002_MenuProfile\n  },\n  setup() {\n    // 画面属性の設定: 画面で使用するラベルやテキストを設定するオブジェクト\n    const screen = reactive({\n      drawer: true,\n      // メニューの開閉フラグ\n      isExpand: store.state.auth.menuisOpen,\n      // メニューが展開フラグ\n      openPCMenuNaviBar: {\n        // 展開状態のメニュー幅とアイコン\n        style: 'open-navi-adjustment',\n        width: '220px',\n        icon: 'mdi-chevron-left'\n      },\n      closePCMenuNaviBar: {\n        // 縮小状態のメニュー幅とアイコン\n        style: 'close-navi-adjustment',\n        width: '56px',\n        icon: 'mdi-chevron-right'\n      }\n    });\n    const {\n      isOpenMenuSP\n    } = useMenuisSp(); // サブメニューの状態\n    const {\n      isOpenProfileMenu,\n      toggleProfileMenu,\n      closeProfileMenu\n    } = profileMenu(); // プロフィールメニューの処理\n    const {\n      initializeUser\n    } = useAuth(); // ユーザー初期化\n    initializeUser(); // 初期化を実行\n\n    const handleClickOutside = event => {\n      const profileMenuElement = document.querySelector('.profileMenu'); // プロフィールメニュー要素\n      const headerElement = document.querySelector('.actImage'); // ヘッダー要素\n      // メニューとヘッダーの外でクリックされた場合\n      if (profileMenuElement && !profileMenuElement.contains(event.target) && headerElement && !headerElement.contains(event.target)) {\n        closeProfileMenu(); // メニューを閉じる\n      }\n    };\n\n    // メニュー開閉フラグが更新処理\n    const toggleExpand = () => {\n      screen.isExpand = !screen.isExpand;\n      //ストアのメニュー開閉フラグが更新\n      store.dispatch('auth/updateMenuisOpen', screen.isExpand);\n    };\n\n    // コンポーネントがマウントされたときにクリックイベントを設定\n    onMounted(() => {\n      document.addEventListener('click', handleClickOutside);\n      screen.isExpand = store.state.auth.menuisOpen;\n    });\n\n    // コンポーネントがアンマウントされる前にクリックイベントを削除\n    onBeforeUnmount(() => {\n      document.removeEventListener('click', handleClickOutside);\n    });\n    return {\n      screen,\n      isOpenMenuSP,\n      isOpenProfileMenu,\n      initializeUser,\n      toggleProfileMenu,\n      closeProfileMenu,\n      toggleExpand\n    };\n  }\n};","map":{"version":3,"names":["onBeforeUnmount","onMounted","reactive","useAuth","useMenuisSp","profileMenu","HeaderLayout","CMN002_Menu","CMN002_MenuSP","CMN002_MenuProfile","store","name","components","setup","screen","drawer","isExpand","state","auth","menuisOpen","openPCMenuNaviBar","style","width","icon","closePCMenuNaviBar","isOpenMenuSP","isOpenProfileMenu","toggleProfileMenu","closeProfileMenu","initializeUser","handleClickOutside","event","profileMenuElement","document","querySelector","headerElement","contains","target","toggleExpand","dispatch","addEventListener","removeEventListener"],"sources":["C:\\Users\\zhenghoufeng\\Desktop\\project\\enisysFront1\\src\\App.vue"],"sourcesContent":["<template>\r\n  <VApp id=\"app\">\r\n    <HeaderLayout />\r\n    <VContainer v-if=\"$route.meta.requiresMenu\" class=\"menu-navi\">\r\n      <VNavigationDrawer\r\n        class=\"menu-navi-drawer\"\r\n        :style=\"{\r\n          width: screen.isExpand ? screen.openPCMenuNaviBar.width : screen.closePCMenuNaviBar.width\r\n        }\"\r\n        :value=\"screen.drawer\"\r\n        app\r\n        :expand-on-hover=\"screen.isExpand\"\r\n        :rail=\"!screen.isExpand\"\r\n        :permanent=\"true\"\r\n      >\r\n        <div class=\"arrow\" @click=\"toggleExpand\">\r\n          <VIcon class=\"arrow-icon\">\r\n            {{ screen.isExpand ? screen.openPCMenuNaviBar.icon : screen.closePCMenuNaviBar.icon }}\r\n          </VIcon>\r\n        </div>\r\n        <CMN002_Menu v-if=\"screen.isExpand\" />\r\n      </VNavigationDrawer>\r\n    </VContainer>\r\n\r\n    <CMN002_MenuSP\r\n      v-if=\"$route.meta.requiresMenu\"\r\n      layout=\"menu\"\r\n      :isOpenMenuSP=\"isOpenMenuSP\"\r\n      @update:isOpenMenuSP=\"isOpenMenuSP = $event\"\r\n    />\r\n\r\n    <CMN002_MenuProfile\r\n      v-if=\"$route.meta.requiresMenu\"\r\n      :isOpenProfileMenu=\"isOpenProfileMenu\"\r\n      @update:isOpenProfileMenu=\"toggleProfileMenu\"\r\n      @click.self=\"closeProfileMenu\"\r\n    />\r\n    <VMain\r\n      class=\"main-isSP\"\r\n      :class=\"[\r\n        $route.meta.requiresMenu ? '' : 'login-adjustment',\r\n        screen.isExpand ? screen.openPCMenuNaviBar.style : screen.closePCMenuNaviBar.style\r\n      ]\"\r\n    >\r\n      <router-view></router-view>\r\n    </VMain>\r\n  </VApp>\r\n</template>\r\n\r\n<script>\r\n  import { onBeforeUnmount, onMounted, reactive } from 'vue';\r\n  import { useAuth } from './composables/userAuth';\r\n  import { useMenuisSp } from './composables/useMenuisSp';\r\n  import { profileMenu } from './composables/profileMenu';\r\n  import HeaderLayout from './components/HeaderLayout.vue';\r\n  import CMN002_Menu from './components/CMN002_Menu.vue';\r\n  import CMN002_MenuSP from './components/CMN002_MenuSP.vue';\r\n  import CMN002_MenuProfile from './components/CMN002_MenuProfile.vue';\r\n  import store from './store';\r\n\r\n  export default {\r\n    name: 'App',\r\n    components: { HeaderLayout, CMN002_Menu, CMN002_MenuSP, CMN002_MenuProfile },\r\n    setup() {\r\n      // 画面属性の設定: 画面で使用するラベルやテキストを設定するオブジェクト\r\n      const screen = reactive({\r\n        drawer: true, // メニューの開閉フラグ\r\n        isExpand: store.state.auth.menuisOpen, // メニューが展開フラグ\r\n        openPCMenuNaviBar: {\r\n          // 展開状態のメニュー幅とアイコン\r\n          style: 'open-navi-adjustment',\r\n          width: '220px',\r\n          icon: 'mdi-chevron-left'\r\n        },\r\n        closePCMenuNaviBar: {\r\n          // 縮小状態のメニュー幅とアイコン\r\n          style: 'close-navi-adjustment',\r\n          width: '56px',\r\n          icon: 'mdi-chevron-right'\r\n        }\r\n      });\r\n      const { isOpenMenuSP } = useMenuisSp(); // サブメニューの状態\r\n      const { isOpenProfileMenu, toggleProfileMenu, closeProfileMenu } = profileMenu(); // プロフィールメニューの処理\r\n      const { initializeUser } = useAuth(); // ユーザー初期化\r\n      initializeUser(); // 初期化を実行\r\n\r\n      const handleClickOutside = (event) => {\r\n        const profileMenuElement = document.querySelector('.profileMenu'); // プロフィールメニュー要素\r\n        const headerElement = document.querySelector('.actImage'); // ヘッダー要素\r\n        // メニューとヘッダーの外でクリックされた場合\r\n        if (\r\n          profileMenuElement &&\r\n          !profileMenuElement.contains(event.target) &&\r\n          headerElement &&\r\n          !headerElement.contains(event.target)\r\n        ) {\r\n          closeProfileMenu(); // メニューを閉じる\r\n        }\r\n      };\r\n\r\n      // メニュー開閉フラグが更新処理\r\n      const toggleExpand = () => {\r\n        screen.isExpand = !screen.isExpand;\r\n        //ストアのメニュー開閉フラグが更新\r\n        store.dispatch('auth/updateMenuisOpen', screen.isExpand);\r\n      };\r\n\r\n      // コンポーネントがマウントされたときにクリックイベントを設定\r\n      onMounted(() => {\r\n        document.addEventListener('click', handleClickOutside);\r\n        screen.isExpand = store.state.auth.menuisOpen;\r\n      });\r\n\r\n      // コンポーネントがアンマウントされる前にクリックイベントを削除\r\n      onBeforeUnmount(() => {\r\n        document.removeEventListener('click', handleClickOutside);\r\n      });\r\n\r\n      return {\r\n        screen,\r\n        isOpenMenuSP,\r\n        isOpenProfileMenu,\r\n        initializeUser,\r\n        toggleProfileMenu,\r\n        closeProfileMenu,\r\n        toggleExpand\r\n      };\r\n    }\r\n  };\r\n</script>\r\n\r\n<style>\r\n  /*フォント参照*/\r\n  @font-face {\r\n    font-family: 'Noto Sans JP';\r\n    src: url('@/assets/fonts/NotoSansJP-VariableFont_wght.ttf') format('truetype');\r\n    font-weight: 100 900;\r\n    font-style: normal;\r\n  }\r\n\r\n  /*全体共通css定義*/\r\n  #app {\r\n    background-color: #fafae0;\r\n    height: auto;\r\n    margin: 0 auto;\r\n    padding: 0;\r\n    font-family: '「」', sans-serif;\r\n    position: relative;\r\n  }\r\n\r\n  #modal {\r\n    background-color: #fafae0;\r\n    height: auto;\r\n    margin: 0 auto;\r\n    padding: 18px 30px;\r\n    font-family: '「」', sans-serif;\r\n    position: relative;\r\n  }\r\n  /* ヘッダーの水平線*/\r\n  hr {\r\n    width: 100%;\r\n    height: 2px;\r\n    border: solid #70b55c;\r\n  }\r\n\r\n  .v-container {\r\n    width: 100%;\r\n  }\r\n\r\n  /* PCメニューバーの*/\r\n  .menu-navi-drawer {\r\n    position: relative;\r\n  }\r\n\r\n  /* PCメニューバー開閉ボタン */\r\n  .arrow {\r\n    position: absolute;\r\n    top: 20px;\r\n    right: 0;\r\n    transform: translateX(50%);\r\n    z-index: 1000;\r\n    padding: 10px;\r\n  }\r\n\r\n  .arrow-icon {\r\n    font-size: 40px !important;\r\n    color: #ffff;\r\n    border: solid #70b55c;\r\n    background-color: #70b55c;\r\n    border-radius: 50%;\r\n    transition: transform 0.3s ease;\r\n    cursor: pointer;\r\n  }\r\n\r\n  .arrow-icon:hover {\r\n    transform: scale(1.2);\r\n  }\r\n\r\n  /* ログイン調整 */\r\n  .login-adjustment {\r\n    --v-layout-left: 0 !important;\r\n    --v-layout-top: 84px !important;\r\n  }\r\n\r\n  /* メインの調整 */\r\n  .main-isSP .v-container {\r\n    padding: 32px;\r\n    margin: auto;\r\n  }\r\n  .open-navi-adjustment {\r\n    --v-layout-left: 220px;\r\n  }\r\n  .close-navi-adjustment {\r\n    --v-layout-left: 75px !important;\r\n    padding-right: 56px !important;\r\n  }\r\n  .v-container {\r\n    max-width: 100% !important;\r\n  }\r\n  .v-picker-title {\r\n    display: none;\r\n  }\r\n\r\n  .custom-label {\r\n    width: 150px;\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n\r\n  .custom-label-child {\r\n    width: 120px;\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n\r\n  .form-row-btn .custom-btn {\r\n    font-size: 18px;\r\n    border-radius: 17px;\r\n  }\r\n\r\n  /* 必須項目の場合、クラスを追加 */\r\n  .has-asterisk::after {\r\n    content: '*';\r\n    font-size: 18px;\r\n    color: red;\r\n    font-weight: bold;\r\n    margin-left: 5px;\r\n  }\r\n\r\n  .custom-btn {\r\n    width: 100px;\r\n    height: 50px !important;\r\n    padding: 0;\r\n    margin: 0;\r\n  }\r\n\r\n  .isSP {\r\n    display: none !important;\r\n  }\r\n  /* スマートフォンのCSS */\r\n  @media (max-width: 850px) {\r\n    /* PC用のメニューが非表示 */\r\n    .menu-navi {\r\n      display: none;\r\n    }\r\n\r\n    /* PC用のメニューの幅が非表示 */\r\n    .main-isSP {\r\n      --v-layout-top: 83px !important;\r\n      --v-layout-left: 0 !important;\r\n      --v-layout-right: 0 !important;\r\n      padding-left: 0 !important;\r\n      padding-right: 0 !important;\r\n      position: relative;\r\n    }\r\n\r\n    .isSP {\r\n      display: block !important;\r\n    }\r\n    .isPC {\r\n      display: none !important;\r\n    }\r\n  }\r\n</style>\r\n"],"mappings":"AAkDE,SAASA,eAAe,EAAEC,SAAS,EAAEC,QAAO,QAAS,KAAK;AAC1D,SAASC,OAAM,QAAS,wBAAwB;AAChD,SAASC,WAAU,QAAS,2BAA2B;AACvD,SAASC,WAAU,QAAS,2BAA2B;AACvD,OAAOC,YAAW,MAAO,+BAA+B;AACxD,OAAOC,WAAU,MAAO,8BAA8B;AACtD,OAAOC,aAAY,MAAO,gCAAgC;AAC1D,OAAOC,kBAAiB,MAAO,qCAAqC;AACpE,OAAOC,KAAI,MAAO,SAAS;AAE3B,eAAe;EACbC,IAAI,EAAE,KAAK;EACXC,UAAU,EAAE;IAAEN,YAAY;IAAEC,WAAW;IAAEC,aAAa;IAAEC;EAAmB,CAAC;EAC5EI,KAAKA,CAAA,EAAG;IACN;IACA,MAAMC,MAAK,GAAIZ,QAAQ,CAAC;MACtBa,MAAM,EAAE,IAAI;MAAE;MACdC,QAAQ,EAAEN,KAAK,CAACO,KAAK,CAACC,IAAI,CAACC,UAAU;MAAE;MACvCC,iBAAiB,EAAE;QACjB;QACAC,KAAK,EAAE,sBAAsB;QAC7BC,KAAK,EAAE,OAAO;QACdC,IAAI,EAAE;MACR,CAAC;MACDC,kBAAkB,EAAE;QAClB;QACAH,KAAK,EAAE,uBAAuB;QAC9BC,KAAK,EAAE,MAAM;QACbC,IAAI,EAAE;MACR;IACF,CAAC,CAAC;IACF,MAAM;MAAEE;IAAa,IAAIrB,WAAW,CAAC,CAAC,EAAE;IACxC,MAAM;MAAEsB,iBAAiB;MAAEC,iBAAiB;MAAEC;IAAiB,IAAIvB,WAAW,CAAC,CAAC,EAAE;IAClF,MAAM;MAAEwB;IAAe,IAAI1B,OAAO,CAAC,CAAC,EAAE;IACtC0B,cAAc,CAAC,CAAC,EAAE;;IAElB,MAAMC,kBAAiB,GAAKC,KAAK,IAAK;MACpC,MAAMC,kBAAiB,GAAIC,QAAQ,CAACC,aAAa,CAAC,cAAc,CAAC,EAAE;MACnE,MAAMC,aAAY,GAAIF,QAAQ,CAACC,aAAa,CAAC,WAAW,CAAC,EAAE;MAC3D;MACA,IACEF,kBAAiB,IACjB,CAACA,kBAAkB,CAACI,QAAQ,CAACL,KAAK,CAACM,MAAM,KACzCF,aAAY,IACZ,CAACA,aAAa,CAACC,QAAQ,CAACL,KAAK,CAACM,MAAM,GACpC;QACAT,gBAAgB,CAAC,CAAC,EAAE;MACtB;IACF,CAAC;;IAED;IACA,MAAMU,YAAW,GAAIA,CAAA,KAAM;MACzBxB,MAAM,CAACE,QAAO,GAAI,CAACF,MAAM,CAACE,QAAQ;MAClC;MACAN,KAAK,CAAC6B,QAAQ,CAAC,uBAAuB,EAAEzB,MAAM,CAACE,QAAQ,CAAC;IAC1D,CAAC;;IAED;IACAf,SAAS,CAAC,MAAM;MACdgC,QAAQ,CAACO,gBAAgB,CAAC,OAAO,EAAEV,kBAAkB,CAAC;MACtDhB,MAAM,CAACE,QAAO,GAAIN,KAAK,CAACO,KAAK,CAACC,IAAI,CAACC,UAAU;IAC/C,CAAC,CAAC;;IAEF;IACAnB,eAAe,CAAC,MAAM;MACpBiC,QAAQ,CAACQ,mBAAmB,CAAC,OAAO,EAAEX,kBAAkB,CAAC;IAC3D,CAAC,CAAC;IAEF,OAAO;MACLhB,MAAM;MACNW,YAAY;MACZC,iBAAiB;MACjBG,cAAc;MACdF,iBAAiB;MACjBC,gBAAgB;MAChBU;IACF,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}