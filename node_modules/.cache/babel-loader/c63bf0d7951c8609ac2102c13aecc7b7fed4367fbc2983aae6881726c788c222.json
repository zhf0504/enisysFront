{"ast":null,"code":"import { createVNode as _createVNode, mergeProps as _mergeProps, resolveDirective as _resolveDirective } from \"vue\";\n// Components\nimport { makeVSelectionControlProps, VSelectionControl } from \"../VSelectionControl/VSelectionControl.mjs\"; // Utilities\nimport { genericComponent, propsFactory, useRender } from \"../../util/index.mjs\"; // Types\nexport const makeVRadioProps = propsFactory({\n  ...makeVSelectionControlProps({\n    falseIcon: '$radioOff',\n    trueIcon: '$radioOn'\n  })\n}, 'VRadio');\nexport const VRadio = genericComponent()({\n  name: 'VRadio',\n  props: makeVRadioProps(),\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    useRender(() => {\n      const controlProps = VSelectionControl.filterProps(props);\n      return _createVNode(VSelectionControl, _mergeProps(controlProps, {\n        \"class\": ['v-radio', props.class],\n        \"style\": props.style,\n        \"type\": \"radio\"\n      }), slots);\n    });\n    return {};\n  }\n});","map":{"version":3,"names":["makeVSelectionControlProps","VSelectionControl","genericComponent","propsFactory","useRender","makeVRadioProps","falseIcon","trueIcon","VRadio","name","props","setup","_ref","slots","controlProps","filterProps","_createVNode","_mergeProps","class","style"],"sources":["../../../src/components/VRadio/VRadio.tsx"],"sourcesContent":["// Components\nimport { makeVSelectionControlProps, VSelectionControl } from '@/components/VSelectionControl/VSelectionControl'\n\n// Utilities\nimport { genericComponent, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { VSelectionControlSlots } from '@/components/VSelectionControl/VSelectionControl'\n\nexport const makeVRadioProps = propsFactory({\n  ...makeVSelectionControlProps({\n    falseIcon: '$radioOff',\n    trueIcon: '$radioOn',\n  }),\n}, 'VRadio')\n\nexport const VRadio = genericComponent<VSelectionControlSlots>()({\n  name: 'VRadio',\n\n  props: makeVRadioProps(),\n\n  setup (props, { slots }) {\n    useRender(() => {\n      const controlProps = VSelectionControl.filterProps(props)\n\n      return (\n        <VSelectionControl\n          { ...controlProps }\n          class={[\n            'v-radio',\n            props.class,\n          ]}\n          style={ props.style }\n          type=\"radio\"\n          v-slots={ slots }\n        />\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VRadio = InstanceType<typeof VRadio>\n"],"mappings":";AAAA;AAAA,SACSA,0BAA0B,EAAEC,iBAAiB,sDAEtD;AAAA,SACSC,gBAAgB,EAAEC,YAAY,EAAEC,SAAS,gCAElD;AAGA,OAAO,MAAMC,eAAe,GAAGF,YAAY,CAAC;EAC1C,GAAGH,0BAA0B,CAAC;IAC5BM,SAAS,EAAE,WAAW;IACtBC,QAAQ,EAAE;EACZ,CAAC;AACH,CAAC,EAAE,QAAQ,CAAC;AAEZ,OAAO,MAAMC,MAAM,GAAGN,gBAAgB,CAAyB,CAAC,CAAC;EAC/DO,IAAI,EAAE,QAAQ;EAEdC,KAAK,EAAEL,eAAe,CAAC,CAAC;EAExBM,KAAKA,CAAED,KAAK,EAAAE,IAAA,EAAa;IAAA,IAAX;MAAEC;IAAM,CAAC,GAAAD,IAAA;IACrBR,SAAS,CAAC,MAAM;MACd,MAAMU,YAAY,GAAGb,iBAAiB,CAACc,WAAW,CAACL,KAAK,CAAC;MAEzD,OAAAM,YAAA,CAAAf,iBAAA,EAAAgB,WAAA,CAESH,YAAY;QAAA,SACV,CACL,SAAS,EACTJ,KAAK,CAACQ,KAAK,CACZ;QAAA,SACOR,KAAK,CAACS,KAAK;QAAA;MAAA,IAETN,KAAK;IAGrB,CAAC,CAAC;IAEF,OAAO,CAAC,CAAC;EACX;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}