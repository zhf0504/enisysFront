{"ast":null,"code":"import { createRouter, createWebHistory } from 'vue-router';\nimport routes from './router';\nimport { useAuth } from '../composables/userAuth';\nimport store from '@/store';\nconst router = createRouter({\n  history: createWebHistory(),\n  routes\n});\n\n// 認証状態に基づいてナビゲーションを処理するミドルウェア\nrouter.beforeEach((to, from, next) => {\n  const {\n    logout\n  } = useAuth();\n  const isAuthenticated = sessionStorage.getItem('user');\n\n  // セッションが存在する場合\n  if (isAuthenticated) {\n    // ユーザーがログインしている場合、ルートが\"/\"である場合はログアウトする\n    if (to.path == '/') {\n      logout();\n      next();\n    }\n    // // ユーザーが無効なページにアクセスしようとした場合、エラーページにリダイレクトする\n    else if (!routes.find(route => route.path === to.path)) {\n      next({\n        name: 'ErrorPage'\n      }); // 'ErrorPage'という名前のルートがあることを確認する\n    } else {\n      const requiredFlag = to.meta.requiredFlag;\n      if (requiredFlag) {\n        const hasAccess = store.state.auth[requiredFlag];\n        if (!hasAccess) {\n          return next({\n            name: requiredFlag\n          });\n        } else {\n          next();\n        }\n      } else {\n        next(); // 要求されたページに進む\n      }\n    }\n  } else {\n    // セッションが存在しない場合\n    // ルートが\"/\"である場合はログアウトする\n    logout();\n    if (to.name != 'login') {\n      next({\n        name: 'login'\n      });\n    } else {\n      next();\n    }\n    // セッションが存在しない場合、ログインページにリダイレクトする\n    // ログインページのルートがあることを確認する\n  }\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","routes","useAuth","store","router","history","beforeEach","to","from","next","logout","isAuthenticated","sessionStorage","getItem","path","find","route","name","requiredFlag","meta","hasAccess","state","auth"],"sources":["C:/Users/zhenghoufeng/Desktop/project/enisysFront1/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHistory } from 'vue-router';\r\nimport routes from './router';\r\nimport { useAuth } from '../composables/userAuth';\r\nimport store from '@/store';\r\n\r\nconst router = createRouter({\r\n  history: createWebHistory(),\r\n  routes\r\n});\r\n\r\n// 認証状態に基づいてナビゲーションを処理するミドルウェア\r\nrouter.beforeEach((to, from, next) => {\r\n  const { logout } = useAuth();\r\n  const isAuthenticated = sessionStorage.getItem('user');\r\n\r\n  // セッションが存在する場合\r\n  if (isAuthenticated) {\r\n    // ユーザーがログインしている場合、ルートが\"/\"である場合はログアウトする\r\n    if (to.path == '/') {\r\n      logout();\r\n      next();\r\n    }\r\n    // // ユーザーが無効なページにアクセスしようとした場合、エラーページにリダイレクトする\r\n    else if (!routes.find((route) => route.path === to.path)) {\r\n      next({ name: 'ErrorPage' }); // 'ErrorPage'という名前のルートがあることを確認する\r\n    } else {\r\n      const requiredFlag = to.meta.requiredFlag;\r\n      if (requiredFlag) {\r\n        const hasAccess = store.state.auth[requiredFlag];\r\n        if (!hasAccess) {\r\n          return next({ name: requiredFlag });\r\n        } else {\r\n          next();\r\n        }\r\n      } else {\r\n        next(); // 要求されたページに進む\r\n      }\r\n    }\r\n  } else {\r\n    // セッションが存在しない場合\r\n    // ルートが\"/\"である場合はログアウトする\r\n    logout();\r\n    if (to.name != 'login') {\r\n      next({ name: 'login' });\r\n    } else {\r\n      next();\r\n    }\r\n    // セッションが存在しない場合、ログインページにリダイレクトする\r\n    // ログインページのルートがあることを確認する\r\n  }\r\n});\r\n\r\nexport default router;\r\n"],"mappings":"AAAA,SAASA,YAAY,EAAEC,gBAAgB,QAAQ,YAAY;AAC3D,OAAOC,MAAM,MAAM,UAAU;AAC7B,SAASC,OAAO,QAAQ,yBAAyB;AACjD,OAAOC,KAAK,MAAM,SAAS;AAE3B,MAAMC,MAAM,GAAGL,YAAY,CAAC;EAC1BM,OAAO,EAAEL,gBAAgB,CAAC,CAAC;EAC3BC;AACF,CAAC,CAAC;;AAEF;AACAG,MAAM,CAACE,UAAU,CAAC,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EACpC,MAAM;IAAEC;EAAO,CAAC,GAAGR,OAAO,CAAC,CAAC;EAC5B,MAAMS,eAAe,GAAGC,cAAc,CAACC,OAAO,CAAC,MAAM,CAAC;;EAEtD;EACA,IAAIF,eAAe,EAAE;IACnB;IACA,IAAIJ,EAAE,CAACO,IAAI,IAAI,GAAG,EAAE;MAClBJ,MAAM,CAAC,CAAC;MACRD,IAAI,CAAC,CAAC;IACR;IACA;IAAA,KACK,IAAI,CAACR,MAAM,CAACc,IAAI,CAAEC,KAAK,IAAKA,KAAK,CAACF,IAAI,KAAKP,EAAE,CAACO,IAAI,CAAC,EAAE;MACxDL,IAAI,CAAC;QAAEQ,IAAI,EAAE;MAAY,CAAC,CAAC,CAAC,CAAC;IAC/B,CAAC,MAAM;MACL,MAAMC,YAAY,GAAGX,EAAE,CAACY,IAAI,CAACD,YAAY;MACzC,IAAIA,YAAY,EAAE;QAChB,MAAME,SAAS,GAAGjB,KAAK,CAACkB,KAAK,CAACC,IAAI,CAACJ,YAAY,CAAC;QAChD,IAAI,CAACE,SAAS,EAAE;UACd,OAAOX,IAAI,CAAC;YAAEQ,IAAI,EAAEC;UAAa,CAAC,CAAC;QACrC,CAAC,MAAM;UACLT,IAAI,CAAC,CAAC;QACR;MACF,CAAC,MAAM;QACLA,IAAI,CAAC,CAAC,CAAC,CAAC;MACV;IACF;EACF,CAAC,MAAM;IACL;IACA;IACAC,MAAM,CAAC,CAAC;IACR,IAAIH,EAAE,CAACU,IAAI,IAAI,OAAO,EAAE;MACtBR,IAAI,CAAC;QAAEQ,IAAI,EAAE;MAAQ,CAAC,CAAC;IACzB,CAAC,MAAM;MACLR,IAAI,CAAC,CAAC;IACR;IACA;IACA;EACF;AACF,CAAC,CAAC;AAEF,eAAeL,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}