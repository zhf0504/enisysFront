{"ast":null,"code":"import { createVNode as _createVNode, resolveDirective as _resolveDirective } from \"vue\";\n// Styles\nimport \"./VGrid.css\";\n\n// Composables\nimport { makeComponentProps } from \"../../composables/component.mjs\";\nimport { makeDimensionProps, useDimension } from \"../../composables/dimensions.mjs\";\nimport { useRtl } from \"../../composables/locale.mjs\";\nimport { makeTagProps } from \"../../composables/tag.mjs\"; // Utilities\nimport { genericComponent, propsFactory, useRender } from \"../../util/index.mjs\";\nexport const makeVContainerProps = propsFactory({\n  fluid: {\n    type: Boolean,\n    default: false\n  },\n  ...makeComponentProps(),\n  ...makeDimensionProps(),\n  ...makeTagProps()\n}, 'VContainer');\nexport const VContainer = genericComponent()({\n  name: 'VContainer',\n  props: makeVContainerProps(),\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const {\n      rtlClasses\n    } = useRtl();\n    const {\n      dimensionStyles\n    } = useDimension(props);\n    useRender(() => _createVNode(props.tag, {\n      \"class\": ['v-container', {\n        'v-container--fluid': props.fluid\n      }, rtlClasses.value, props.class],\n      \"style\": [dimensionStyles.value, props.style]\n    }, slots));\n    return {};\n  }\n});","map":{"version":3,"names":["makeComponentProps","makeDimensionProps","useDimension","useRtl","makeTagProps","genericComponent","propsFactory","useRender","makeVContainerProps","fluid","type","Boolean","default","VContainer","name","props","setup","_ref","slots","rtlClasses","dimensionStyles","_createVNode","tag","value","class","style"],"sources":["../../../src/components/VGrid/VContainer.tsx"],"sourcesContent":["// Styles\nimport './VGrid.sass'\n\n// Composables\nimport { makeComponentProps } from '@/composables/component'\nimport { makeDimensionProps, useDimension } from '@/composables/dimensions'\nimport { useRtl } from '@/composables/locale'\nimport { makeTagProps } from '@/composables/tag'\n\n// Utilities\nimport { genericComponent, propsFactory, useRender } from '@/util'\n\nexport const makeVContainerProps = propsFactory({\n  fluid: {\n    type: Boolean,\n    default: false,\n  },\n\n  ...makeComponentProps(),\n  ...makeDimensionProps(),\n  ...makeTagProps(),\n}, 'VContainer')\n\nexport const VContainer = genericComponent()({\n  name: 'VContainer',\n\n  props: makeVContainerProps(),\n\n  setup (props, { slots }) {\n    const { rtlClasses } = useRtl()\n    const { dimensionStyles } = useDimension(props)\n\n    useRender(() => (\n      <props.tag\n        class={[\n          'v-container',\n          { 'v-container--fluid': props.fluid },\n          rtlClasses.value,\n          props.class,\n        ]}\n        style={[\n          dimensionStyles.value,\n          props.style,\n        ]}\n        v-slots={ slots }\n      />\n    ))\n\n    return {}\n  },\n})\n\nexport type VContainer = InstanceType<typeof VContainer>\n"],"mappings":";AAAA;AACA;;AAEA;AAAA,SACSA,kBAAkB;AAAA,SAClBC,kBAAkB,EAAEC,YAAY;AAAA,SAChCC,MAAM;AAAA,SACNC,YAAY,qCAErB;AAAA,SACSC,gBAAgB,EAAEC,YAAY,EAAEC,SAAS;AAElD,OAAO,MAAMC,mBAAmB,GAAGF,YAAY,CAAC;EAC9CG,KAAK,EAAE;IACLC,IAAI,EAAEC,OAAO;IACbC,OAAO,EAAE;EACX,CAAC;EAED,GAAGZ,kBAAkB,CAAC,CAAC;EACvB,GAAGC,kBAAkB,CAAC,CAAC;EACvB,GAAGG,YAAY,CAAC;AAClB,CAAC,EAAE,YAAY,CAAC;AAEhB,OAAO,MAAMS,UAAU,GAAGR,gBAAgB,CAAC,CAAC,CAAC;EAC3CS,IAAI,EAAE,YAAY;EAElBC,KAAK,EAAEP,mBAAmB,CAAC,CAAC;EAE5BQ,KAAKA,CAAED,KAAK,EAAAE,IAAA,EAAa;IAAA,IAAX;MAAEC;IAAM,CAAC,GAAAD,IAAA;IACrB,MAAM;MAAEE;IAAW,CAAC,GAAGhB,MAAM,CAAC,CAAC;IAC/B,MAAM;MAAEiB;IAAgB,CAAC,GAAGlB,YAAY,CAACa,KAAK,CAAC;IAE/CR,SAAS,CAAC,MAAAc,YAAA,CAAAN,KAAA,CAAAO,GAAA;MAAA,SAEC,CACL,aAAa,EACb;QAAE,oBAAoB,EAAEP,KAAK,CAACN;MAAM,CAAC,EACrCU,UAAU,CAACI,KAAK,EAChBR,KAAK,CAACS,KAAK,CACZ;MAAA,SACM,CACLJ,eAAe,CAACG,KAAK,EACrBR,KAAK,CAACU,KAAK;IACZ,GACSP,KAAK,CAElB,CAAC;IAEF,OAAO,CAAC,CAAC;EACX;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}