{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport menuData from '@/assets/JsonData/MenuAdmin.json';\nimport router from '@/router';\nimport { ref } from 'vue';\nexport default {\n  props: {\n    layout: {\n      type: String,\n      required: true\n    },\n    isOpenMenuSP: {\n      type: Boolean,\n      default: false\n    }\n  },\n  setup(props, {\n    emit\n  }) {\n    const menuHome = {\n      title: 'Home',\n      icon: 'mdi-home-variant-outline',\n      route: '/BlankPage'\n    };\n    //jsonデータ参照\n    const menuItems = ref(menuData);\n    //ノートIcon\n    const noteIcon = 'mdi-book-open-blank-variant-outline';\n    //画面遷移用メソッド\n    const navigateTo = route => {\n      router.push(route);\n      emit('update:isOpenMenuSP', false);\n    };\n    //メニューの開閉状態\n    const toggleMenu = () => {\n      emit('update:isOpenMenuSP', !props.isOpenMenuSP);\n    };\n    //黒バックグランド押下する時、メニューを閉じる\n    const closeMenu = () => {\n      emit('update:isOpenMenuSP', false);\n    };\n    return {\n      menuHome,\n      menuItems,\n      noteIcon,\n      navigateTo,\n      toggleMenu,\n      closeMenu\n    };\n  }\n};","map":{"version":3,"names":["menuData","router","ref","props","layout","type","String","required","isOpenMenuSP","Boolean","default","setup","emit","menuHome","title","icon","route","menuItems","noteIcon","navigateTo","push","toggleMenu","closeMenu"],"sources":["C:\\Users\\zhenghoufeng\\Desktop\\project\\enisysFront1\\src\\components\\CMN002_MenuSP.vue"],"sourcesContent":["<template>\r\n  <template v-if=\"layout === 'button'\">\r\n    <VBtn @click.stop=\"toggleMenu\" class=\"menu-btn\">\r\n      <VIcon>{{ isOpenMenuSP ? 'mdi-close' : 'mdi-menu' }}</VIcon>\r\n    </VBtn>\r\n  </template>\r\n\r\n  <template v-if=\"layout === 'menu'\">\r\n    <div v-if=\"isOpenMenuSP\" class=\"menu-overlay\" @click=\"closeMenu\"></div>\r\n    <transition name=\"dropdown\">\r\n      <VList v-if=\"isOpenMenuSP\" class=\"menu-dropdown\">\r\n        <VExpansionPanels>\r\n          <!-- 「BlankPage」の固定 -->\r\n          <VExpansionPanel class=\"custom-homeMenu\">\r\n            <VListItem @click=\"navigateTo(menuHome.route)\" class=\"custom-expansion\">\r\n              <VListItemAction>\r\n                <VIcon color=\"#70b55c\" class=\"custom-icon\">\r\n                  {{ menuHome.icon }}\r\n                </VIcon>\r\n                <VListItemTitle class=\"custom-list-item\">\r\n                  {{ menuHome.title }}\r\n                </VListItemTitle>\r\n              </VListItemAction>\r\n            </VListItem>\r\n          </VExpansionPanel>\r\n          <!-- リクエストからMenuListのループ -->\r\n          <VExpansionPanel v-for=\"(item, index) in menuItems\" :key=\"index\">\r\n            <VExpansionPanelTitle v-if=\"item.deviceFlag\">\r\n              <VListItem class=\"custom-expansion\">\r\n                <VListItemAction>\r\n                  <VIcon color=\"#70b55c\" class=\"custom-icon\">\r\n                    {{ noteIcon }}\r\n                  </VIcon>\r\n                  <VListItemTitle class=\"custom-list-item\">\r\n                    {{ item.oyaMenuName }}\r\n                  </VListItemTitle>\r\n                </VListItemAction>\r\n              </VListItem>\r\n            </VExpansionPanelTitle>\r\n            <VExpansionPanelText v-if=\"item.deviceFlag\">\r\n              <VListItem\r\n                v-for=\"(child, childIndex) in item.subMenuList\"\r\n                :key=\"childIndex\"\r\n                @click=\"navigateTo(child.router)\"\r\n                class=\"menu-subitem\"\r\n              >\r\n                <VListItemAction>\r\n                  <VListItemTitle class=\"custom-list-item-sub\">\r\n                    {{ child.subMenuName }}\r\n                  </VListItemTitle>\r\n                </VListItemAction>\r\n              </VListItem>\r\n            </VExpansionPanelText>\r\n          </VExpansionPanel>\r\n        </VExpansionPanels>\r\n      </VList>\r\n    </transition>\r\n  </template>\r\n</template>\r\n\r\n<script>\r\n  import menuData from '@/assets/JsonData/MenuAdmin.json';\r\n  import router from '@/router';\r\n  import { ref } from 'vue';\r\n  export default {\r\n    props: {\r\n      layout: {\r\n        type: String,\r\n        required: true\r\n      },\r\n      isOpenMenuSP: {\r\n        type: Boolean,\r\n        default: false\r\n      }\r\n    },\r\n    setup(props, { emit }) {\r\n      const menuHome = {\r\n        title: 'Home',\r\n        icon: 'mdi-home-variant-outline',\r\n        route: '/BlankPage'\r\n      };\r\n      //jsonデータ参照\r\n      const menuItems = ref(menuData);\r\n      //ノートIcon\r\n      const noteIcon = 'mdi-book-open-blank-variant-outline';\r\n      //画面遷移用メソッド\r\n      const navigateTo = (route) => {\r\n        router.push(route);\r\n        emit('update:isOpenMenuSP', false);\r\n      };\r\n      //メニューの開閉状態\r\n      const toggleMenu = () => {\r\n        emit('update:isOpenMenuSP', !props.isOpenMenuSP);\r\n      };\r\n      //黒バックグランド押下する時、メニューを閉じる\r\n      const closeMenu = () => {\r\n        emit('update:isOpenMenuSP', false);\r\n      };\r\n      return {\r\n        menuHome,\r\n        menuItems,\r\n        noteIcon,\r\n        navigateTo,\r\n        toggleMenu,\r\n        closeMenu\r\n      };\r\n    }\r\n  };\r\n</script>\r\n\r\n<style scoped>\r\n  .menu-overlay {\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background: rgba(0, 0, 0, 0.5);\r\n    z-index: 1000;\r\n  }\r\n\r\n  .menu-dropdown {\r\n    position: fixed;\r\n    width: 100%;\r\n    top: 72px;\r\n    border-radius: 4px;\r\n    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);\r\n    z-index: 1001;\r\n    padding: 0;\r\n    overflow-y: auto;\r\n  }\r\n\r\n  .dropdown-enter-active,\r\n  .dropdown-leave-active {\r\n    transition: opacity 0.5s ease, transform 0.5s ease;\r\n  }\r\n\r\n  .dropdown-leave-active {\r\n    opacity: 1;\r\n  }\r\n\r\n  .dropdown-enter {\r\n    opacity: 0;\r\n    transform: translateY(-20px);\r\n  }\r\n\r\n  .dropdown-enter-to {\r\n    opacity: 1;\r\n    transform: translateY(0);\r\n  }\r\n\r\n  .dropdown-leave-to {\r\n    opacity: 0;\r\n    transform: translateY(-20px);\r\n  }\r\n\r\n  .dropdown-list {\r\n    background-color: #fff;\r\n    border: 1px solid #ccc;\r\n    border-radius: 4px;\r\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\r\n  }\r\n\r\n  .v-expansion-panel {\r\n    border-bottom: solid 1px #70b55c;\r\n  }\r\n\r\n  .menu-subitem {\r\n    cursor: pointer;\r\n    border-top: solid 1px #cff0c5;\r\n    padding: 0 !important;\r\n  }\r\n\r\n  .custom-homeMenu {\r\n    padding: 16px;\r\n    padding-left: 22px;\r\n  }\r\n  .custom-list-item {\r\n    padding-left: 10px;\r\n    font-weight: bold;\r\n    font-size: 1.25rem;\r\n  }\r\n  .custom-list-item-sub {\r\n    padding-left: 45px;\r\n    font-size: 1rem;\r\n  }\r\n  .menu-btn {\r\n    font-size: 30px;\r\n  }\r\n\r\n  @media (min-width: 850px) {\r\n    .menu-overlay,\r\n    .menu-dropdown {\r\n      display: none;\r\n    }\r\n  }\r\n</style>\r\n"],"mappings":";AA6DE,OAAOA,QAAO,MAAO,kCAAkC;AACvD,OAAOC,MAAK,MAAO,UAAU;AAC7B,SAASC,GAAE,QAAS,KAAK;AACzB,eAAe;EACbC,KAAK,EAAE;IACLC,MAAM,EAAE;MACNC,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACZ,CAAC;IACDC,YAAY,EAAE;MACZH,IAAI,EAAEI,OAAO;MACbC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,KAAKA,CAACR,KAAK,EAAE;IAAES;EAAK,CAAC,EAAE;IACrB,MAAMC,QAAO,GAAI;MACfC,KAAK,EAAE,MAAM;MACbC,IAAI,EAAE,0BAA0B;MAChCC,KAAK,EAAE;IACT,CAAC;IACD;IACA,MAAMC,SAAQ,GAAIf,GAAG,CAACF,QAAQ,CAAC;IAC/B;IACA,MAAMkB,QAAO,GAAI,qCAAqC;IACtD;IACA,MAAMC,UAAS,GAAKH,KAAK,IAAK;MAC5Bf,MAAM,CAACmB,IAAI,CAACJ,KAAK,CAAC;MAClBJ,IAAI,CAAC,qBAAqB,EAAE,KAAK,CAAC;IACpC,CAAC;IACD;IACA,MAAMS,UAAS,GAAIA,CAAA,KAAM;MACvBT,IAAI,CAAC,qBAAqB,EAAE,CAACT,KAAK,CAACK,YAAY,CAAC;IAClD,CAAC;IACD;IACA,MAAMc,SAAQ,GAAIA,CAAA,KAAM;MACtBV,IAAI,CAAC,qBAAqB,EAAE,KAAK,CAAC;IACpC,CAAC;IACD,OAAO;MACLC,QAAQ;MACRI,SAAS;MACTC,QAAQ;MACRC,UAAU;MACVE,UAAU;MACVC;IACF,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}