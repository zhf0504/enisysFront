{"ast":null,"code":"import BaseTitle from '@/components/BaseTitle.vue';\nimport NotificationError from '@/components/error/NotificationError.vue';\nimport { onMounted, reactive, ref } from 'vue';\nexport default {\n  components: {\n    BaseTitle,\n    NotificationError\n  },\n  setup() {\n    const section = 1;\n    const passwordConstraints = {\n      minlength: 8,\n      maxlength: 30\n    };\n    const showCurrentPasswordRow = ref(true);\n    const screen = reactive({\n      label: {\n        title: 'パスワード変更',\n        title2: 'パスワード変更 (再設定)',\n        passwordChangeBtn: 'パスワード変更'\n      },\n      password: {\n        currentPassword: '現在のパスワード',\n        newPassword: '新しいパスワード',\n        confirmPassword: '新しいパスワード（確認）'\n      },\n      currentPassword: '',\n      newPassword: '',\n      confirmPassword: '',\n      showCurrentPassword: false,\n      showNewPassword: false,\n      showConfirmPassword: false,\n      isFocusedCurrentPass: false,\n      isFocusedNewPass: false,\n      isFocusedConfirmPass: false,\n      showPasswordHint: false,\n      errorCode: ''\n    });\n    const validatePasswords = () => {\n      const passwordPattern = /^(?=.*?[a-z])(?=.*?\\d)[a-z\\d]{8,30}$/i;\n\n      //パスワード基準を満たさない\n      if (!passwordPattern.test(screen.newPassword)) {\n        screen.errorCode = 'E006';\n        return false;\n      }\n\n      //入力した新しいパスワードが一致しない\n      if (screen.newPassword !== screen.confirmPassword) {\n        screen.errorCode = 'E007';\n        return false;\n      }\n\n      //新しいパスワードと既存パスワードが同じ\n      if (screen.currentPassword === screen.newPassword) {\n        screen.errorCode = 'E008';\n        return false;\n      }\n\n      //直近3回のパスワードが使われている。\tE009 エラー\n      //バックエンドの方先にやります\n      //TODO 追加エラー表示\n      screen.errorCode = '';\n      return true;\n    };\n\n    // Form submission\n    const handleSubmit = () => {\n      if (validatePasswords()) {\n        return true;\n      }\n    };\n\n    //初期表示\n    onMounted(() => {\n      if (section != 1) {\n        screen.label.title = screen.label.title2;\n        showCurrentPasswordRow.value = false;\n      }\n    });\n    return {\n      screen,\n      section,\n      showCurrentPasswordRow,\n      validatePasswords,\n      handleSubmit,\n      passwordConstraints\n    };\n  }\n};","map":{"version":3,"names":["BaseTitle","NotificationError","onMounted","reactive","ref","components","setup","section","passwordConstraints","minlength","maxlength","showCurrentPasswordRow","screen","label","title","title2","passwordChangeBtn","password","currentPassword","newPassword","confirmPassword","showCurrentPassword","showNewPassword","showConfirmPassword","isFocusedCurrentPass","isFocusedNewPass","isFocusedConfirmPass","showPasswordHint","errorCode","validatePasswords","passwordPattern","test","handleSubmit","value"],"sources":["C:\\Users\\zhenghoufeng\\Desktop\\project\\enisysFront1\\src\\views\\CMN003_PassChange.vue"],"sourcesContent":["<template>\r\n  <VContainer>\r\n    <!-- タイトル -->\r\n    <BaseTitle :title=\"screen.label.title\" class=\"title\"></BaseTitle>\r\n    <div class=\"errorMess\">\r\n      <NotificationError v-if=\"screen.errorCode\" :errorCode=\"screen.errorCode\" />\r\n    </div>\r\n    <VForm @submit.prevent=\"handleSubmit\" class=\"password-change\">\r\n      <!-- 現在のパスワード -->\r\n      <VRow v-if=\"showCurrentPasswordRow\" class=\"current-password\">\r\n        <VCol class=\"current-pass-input\">\r\n          <h3>{{ screen.password.currentPassword }}</h3>\r\n          <VTextField\r\n            v-model=\"screen.currentPassword\"\r\n            :type=\"screen.showCurrentPassword ? 'text' : 'password'\"\r\n            class=\"custom-input\"\r\n            outlined\r\n            @focus=\"screen.isFocusedCurrentPass = true\"\r\n            @blur=\"screen.isFocusedCurrentPass = false\"\r\n            v-bind=\"passwordConstraints\"\r\n            hide-details\r\n          >\r\n            <template v-if=\"screen.isFocusedCurrentPass\" v-slot:append-inner>\r\n              <VIcon @click=\"screen.showCurrentPassword = !screen.showCurrentPassword\" class=\"cursor-pointer\">\r\n                {{ screen.showCurrentPassword ? 'mdi-eye-off' : 'mdi-eye' }}\r\n              </VIcon>\r\n            </template>\r\n          </VTextField>\r\n        </VCol>\r\n      </VRow>\r\n\r\n      <!-- 新しいパスワード -->\r\n      <VRow class=\"new-password\">\r\n        <VCol class=\"new-pass-input\">\r\n          <h3>{{ screen.password.newPassword }}</h3>\r\n          <VTextField\r\n            v-model=\"screen.newPassword\"\r\n            :type=\"screen.showNewPassword ? 'text' : 'password'\"\r\n            class=\"custom-input\"\r\n            outlined\r\n            @focus=\"screen.isFocusedNewPass = true\"\r\n            @blur=\"screen.isFocusedNewPass = false\"\r\n            v-bind=\"passwordConstraints\"\r\n            hide-details\r\n          >\r\n            <template v-if=\"screen.isFocusedNewPass\" v-slot:append-inner>\r\n              <VIcon @click=\"screen.showNewPassword = !screen.showNewPassword\" class=\"cursor-pointer\">\r\n                {{ screen.showNewPassword ? 'mdi-eye-off' : 'mdi-eye' }}\r\n              </VIcon>\r\n            </template>\r\n          </VTextField>\r\n        </VCol>\r\n      </VRow>\r\n\r\n      <!-- パスワード確認 -->\r\n      <VRow class=\"confirm-password\">\r\n        <VCol class=\"confirm-pass-input\">\r\n          <h3>{{ screen.password.confirmPassword }}</h3>\r\n          <VTextField\r\n            v-model=\"screen.confirmPassword\"\r\n            :type=\"screen.showConfirmPassword ? 'text' : 'password'\"\r\n            class=\"custom-input\"\r\n            outlined\r\n            @focus=\"screen.isFocusedConfirmPass = true\"\r\n            @blur=\"screen.isFocusedConfirmPass = false\"\r\n            v-bind=\"passwordConstraints\"\r\n            hide-details\r\n          >\r\n            <template v-if=\"screen.isFocusedConfirmPass\" v-slot:append-inner>\r\n              <VIcon @click=\"screen.showConfirmPassword = !screen.showConfirmPassword\" class=\"cursor-pointer\">\r\n                {{ screen.showConfirmPassword ? 'mdi-eye-off' : 'mdi-eye' }}\r\n              </VIcon>\r\n            </template>\r\n          </VTextField>\r\n        </VCol>\r\n      </VRow>\r\n\r\n      <div class=\"form-btn\">\r\n        <VBtn type=\"submit\" color=\"primary\" class=\"custom-btn\">{{ screen.label.passwordChangeBtn }}</VBtn>\r\n      </div>\r\n    </VForm>\r\n  </VContainer>\r\n</template>\r\n\r\n<script>\r\n  import BaseTitle from '@/components/BaseTitle.vue';\r\n  import NotificationError from '@/components/error/NotificationError.vue';\r\n  import { onMounted, reactive, ref } from 'vue';\r\n\r\n  export default {\r\n    components: { BaseTitle, NotificationError },\r\n    setup() {\r\n      const section = 1;\r\n      const passwordConstraints = { minlength: 8, maxlength: 30 };\r\n      const showCurrentPasswordRow = ref(true);\r\n      const screen = reactive({\r\n        label: {\r\n          title: 'パスワード変更',\r\n          title2: 'パスワード変更 (再設定)',\r\n          passwordChangeBtn: 'パスワード変更'\r\n        },\r\n        password: {\r\n          currentPassword: '現在のパスワード',\r\n          newPassword: '新しいパスワード',\r\n          confirmPassword: '新しいパスワード（確認）'\r\n        },\r\n        currentPassword: '',\r\n        newPassword: '',\r\n        confirmPassword: '',\r\n        showCurrentPassword: false,\r\n        showNewPassword: false,\r\n        showConfirmPassword: false,\r\n        isFocusedCurrentPass: false,\r\n        isFocusedNewPass: false,\r\n        isFocusedConfirmPass: false,\r\n        showPasswordHint: false,\r\n        errorCode: ''\r\n      });\r\n\r\n      const validatePasswords = () => {\r\n        const passwordPattern = /^(?=.*?[a-z])(?=.*?\\d)[a-z\\d]{8,30}$/i;\r\n\r\n        //パスワード基準を満たさない\r\n        if (!passwordPattern.test(screen.newPassword)) {\r\n          screen.errorCode = 'E006';\r\n          return false;\r\n        }\r\n\r\n        //入力した新しいパスワードが一致しない\r\n        if (screen.newPassword !== screen.confirmPassword) {\r\n          screen.errorCode = 'E007';\r\n          return false;\r\n        }\r\n\r\n        //新しいパスワードと既存パスワードが同じ\r\n        if (screen.currentPassword === screen.newPassword) {\r\n          screen.errorCode = 'E008';\r\n          return false;\r\n        }\r\n\r\n        //直近3回のパスワードが使われている。\tE009 エラー\r\n        //バックエンドの方先にやります\r\n        //TODO 追加エラー表示\r\n        screen.errorCode = '';\r\n        return true;\r\n      };\r\n\r\n      // Form submission\r\n      const handleSubmit = () => {\r\n        if (validatePasswords()) {\r\n          return true;\r\n        }\r\n      };\r\n\r\n      //初期表示\r\n      onMounted(() => {\r\n        if (section != 1) {\r\n          screen.label.title = screen.label.title2;\r\n          showCurrentPasswordRow.value = false;\r\n        }\r\n      });\r\n\r\n      return {\r\n        screen,\r\n        section,\r\n        showCurrentPasswordRow,\r\n        validatePasswords,\r\n        handleSubmit,\r\n        passwordConstraints\r\n      };\r\n    }\r\n  };\r\n</script>\r\n\r\n<style scoped>\r\n  .password-change {\r\n    width: 35%;\r\n    margin-left: 20%;\r\n    margin-top: 1em;\r\n  }\r\n\r\n  .password-change h3 {\r\n    letter-spacing: 2px;\r\n  }\r\n\r\n  :deep(.custom-input .v-input__control) {\r\n    background-color: #ffffff;\r\n    width: 100%;\r\n    height: 50px;\r\n  }\r\n\r\n  :deep(.custom-input .v-field__input) {\r\n    height: 50px;\r\n  }\r\n\r\n  .form-btn {\r\n    text-align: center;\r\n    margin-top: 3em;\r\n  }\r\n\r\n  .custom-btn {\r\n    text-align: center;\r\n    width: 50%;\r\n    height: 50px;\r\n  }\r\n\r\n  @media (max-width: 794px) {\r\n    .password-change {\r\n      width: 85%;\r\n      margin: auto;\r\n      margin-top: 2em;\r\n    }\r\n\r\n    .custom-btn {\r\n      width: 55%;\r\n      margin-right: 10%;\r\n    }\r\n    :deep(.custom-input .v-input__control) {\r\n      width: 100%;\r\n    }\r\n  }\r\n</style>\r\n"],"mappings":"AAqFE,OAAOA,SAAQ,MAAO,4BAA4B;AAClD,OAAOC,iBAAgB,MAAO,0CAA0C;AACxE,SAASC,SAAS,EAAEC,QAAQ,EAAEC,GAAE,QAAS,KAAK;AAE9C,eAAe;EACbC,UAAU,EAAE;IAAEL,SAAS;IAAEC;EAAkB,CAAC;EAC5CK,KAAKA,CAAA,EAAG;IACN,MAAMC,OAAM,GAAI,CAAC;IACjB,MAAMC,mBAAkB,GAAI;MAAEC,SAAS,EAAE,CAAC;MAAEC,SAAS,EAAE;IAAG,CAAC;IAC3D,MAAMC,sBAAqB,GAAIP,GAAG,CAAC,IAAI,CAAC;IACxC,MAAMQ,MAAK,GAAIT,QAAQ,CAAC;MACtBU,KAAK,EAAE;QACLC,KAAK,EAAE,SAAS;QAChBC,MAAM,EAAE,eAAe;QACvBC,iBAAiB,EAAE;MACrB,CAAC;MACDC,QAAQ,EAAE;QACRC,eAAe,EAAE,UAAU;QAC3BC,WAAW,EAAE,UAAU;QACvBC,eAAe,EAAE;MACnB,CAAC;MACDF,eAAe,EAAE,EAAE;MACnBC,WAAW,EAAE,EAAE;MACfC,eAAe,EAAE,EAAE;MACnBC,mBAAmB,EAAE,KAAK;MAC1BC,eAAe,EAAE,KAAK;MACtBC,mBAAmB,EAAE,KAAK;MAC1BC,oBAAoB,EAAE,KAAK;MAC3BC,gBAAgB,EAAE,KAAK;MACvBC,oBAAoB,EAAE,KAAK;MAC3BC,gBAAgB,EAAE,KAAK;MACvBC,SAAS,EAAE;IACb,CAAC,CAAC;IAEF,MAAMC,iBAAgB,GAAIA,CAAA,KAAM;MAC9B,MAAMC,eAAc,GAAI,uCAAuC;;MAE/D;MACA,IAAI,CAACA,eAAe,CAACC,IAAI,CAACnB,MAAM,CAACO,WAAW,CAAC,EAAE;QAC7CP,MAAM,CAACgB,SAAQ,GAAI,MAAM;QACzB,OAAO,KAAK;MACd;;MAEA;MACA,IAAIhB,MAAM,CAACO,WAAU,KAAMP,MAAM,CAACQ,eAAe,EAAE;QACjDR,MAAM,CAACgB,SAAQ,GAAI,MAAM;QACzB,OAAO,KAAK;MACd;;MAEA;MACA,IAAIhB,MAAM,CAACM,eAAc,KAAMN,MAAM,CAACO,WAAW,EAAE;QACjDP,MAAM,CAACgB,SAAQ,GAAI,MAAM;QACzB,OAAO,KAAK;MACd;;MAEA;MACA;MACA;MACAhB,MAAM,CAACgB,SAAQ,GAAI,EAAE;MACrB,OAAO,IAAI;IACb,CAAC;;IAED;IACA,MAAMI,YAAW,GAAIA,CAAA,KAAM;MACzB,IAAIH,iBAAiB,CAAC,CAAC,EAAE;QACvB,OAAO,IAAI;MACb;IACF,CAAC;;IAED;IACA3B,SAAS,CAAC,MAAM;MACd,IAAIK,OAAM,IAAK,CAAC,EAAE;QAChBK,MAAM,CAACC,KAAK,CAACC,KAAI,GAAIF,MAAM,CAACC,KAAK,CAACE,MAAM;QACxCJ,sBAAsB,CAACsB,KAAI,GAAI,KAAK;MACtC;IACF,CAAC,CAAC;IAEF,OAAO;MACLrB,MAAM;MACNL,OAAO;MACPI,sBAAsB;MACtBkB,iBAAiB;MACjBG,YAAY;MACZxB;IACF,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}