{"ast":null,"code":"import { ref, nextTick, watch } from 'vue';\nexport default {\n  name: 'MonthPicker',\n  props: {\n    modelValue: {\n      type: String,\n      default: ''\n    }\n  },\n  emits: ['update:modelValue'],\n  setup(props, {\n    emit\n  }) {\n    const selectedDate = ref(props.modelValue); // 初期値として親から受け取った値を使用\n    const displayDate = ref('');\n    const monthPicker = ref(null);\n    const openCalendar = async () => {\n      await nextTick();\n      if (monthPicker.value) {\n        monthPicker.value.showPicker();\n      }\n    };\n    const updateDisplayDate = () => {\n      if (selectedDate.value) {\n        const [year, month] = selectedDate.value.split('-');\n        displayDate.value = `${year}年${month}月`;\n      } else {\n        displayDate.value = '';\n      }\n      emit('update:modelValue', selectedDate.value); // 親コンポーネントに選択した値を送信\n    };\n\n    // props.modelValueが変更されたときにselectedDateを更新\n    watch(() => props.modelValue, newValue => {\n      selectedDate.value = newValue;\n      updateDisplayDate(); // 表示も更新\n    });\n    return {\n      selectedDate,\n      displayDate,\n      monthPicker,\n      openCalendar,\n      updateDisplayDate\n    };\n  }\n};","map":{"version":3,"names":["ref","nextTick","watch","name","props","modelValue","type","String","default","emits","setup","emit","selectedDate","displayDate","monthPicker","openCalendar","value","showPicker","updateDisplayDate","year","month","split","newValue"],"sources":["C:\\Users\\zhenghoufeng\\Desktop\\project\\enisysFront1\\src\\components\\calendar\\monthPicker.vue"],"sourcesContent":["<template>\r\n  <VTextField\r\n    class=\"custom-input\"\r\n    v-model=\"displayDate\"\r\n    placeholder=\"年月\"\r\n    type=\"text\"\r\n    append-inner-icon=\"mdi-calendar-month\"\r\n    hide-details\r\n    :readonly=\"true\"\r\n    @click=\"openCalendar\"\r\n  />\r\n  <input\r\n    class=\"custom-input\"\r\n    ref=\"monthPicker\"\r\n    type=\"month\"\r\n    v-model=\"selectedDate\"\r\n    @input=\"updateDisplayDate\"\r\n    style=\"opacity: 0; position: absolute; width: 0; height: 0\"\r\n  />\r\n</template>\r\n\r\n<script>\r\n  import { ref, nextTick, watch } from 'vue';\r\n\r\n  export default {\r\n    name: 'MonthPicker',\r\n    props: {\r\n      modelValue: {\r\n        type: String,\r\n        default: ''\r\n      }\r\n    },\r\n    emits: ['update:modelValue'],\r\n    setup(props, { emit }) {\r\n      const selectedDate = ref(props.modelValue); // 初期値として親から受け取った値を使用\r\n      const displayDate = ref('');\r\n      const monthPicker = ref(null);\r\n      const openCalendar = async () => {\r\n        await nextTick();\r\n        if (monthPicker.value) {\r\n          monthPicker.value.showPicker();\r\n        }\r\n      };\r\n\r\n      const updateDisplayDate = () => {\r\n        if (selectedDate.value) {\r\n          const [year, month] = selectedDate.value.split('-');\r\n          displayDate.value = `${year}年${month}月`;\r\n        } else {\r\n          displayDate.value = '';\r\n        }\r\n        emit('update:modelValue', selectedDate.value); // 親コンポーネントに選択した値を送信\r\n      };\r\n\r\n      // props.modelValueが変更されたときにselectedDateを更新\r\n      watch(\r\n        () => props.modelValue,\r\n        (newValue) => {\r\n          selectedDate.value = newValue;\r\n          updateDisplayDate(); // 表示も更新\r\n        }\r\n      );\r\n\r\n      return {\r\n        selectedDate,\r\n        displayDate,\r\n        monthPicker,\r\n        openCalendar,\r\n        updateDisplayDate\r\n      };\r\n    }\r\n  };\r\n</script>\r\n\r\n<style scoped>\r\n  .v-input__append-inner {\r\n    display: none;\r\n  }\r\n\r\n  .custom-input {\r\n    padding-right: 0;\r\n  }\r\n\r\n  input[type='month']::-webkit-calendar-picker-indicator {\r\n    display: none;\r\n  }\r\n</style>\r\n"],"mappings":"AAsBE,SAASA,GAAG,EAAEC,QAAQ,EAAEC,KAAI,QAAS,KAAK;AAE1C,eAAe;EACbC,IAAI,EAAE,aAAa;EACnBC,KAAK,EAAE;IACLC,UAAU,EAAE;MACVC,IAAI,EAAEC,MAAM;MACZC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,KAAK,EAAE,CAAC,mBAAmB,CAAC;EAC5BC,KAAKA,CAACN,KAAK,EAAE;IAAEO;EAAK,CAAC,EAAE;IACrB,MAAMC,YAAW,GAAIZ,GAAG,CAACI,KAAK,CAACC,UAAU,CAAC,EAAE;IAC5C,MAAMQ,WAAU,GAAIb,GAAG,CAAC,EAAE,CAAC;IAC3B,MAAMc,WAAU,GAAId,GAAG,CAAC,IAAI,CAAC;IAC7B,MAAMe,YAAW,GAAI,MAAAA,CAAA,KAAY;MAC/B,MAAMd,QAAQ,CAAC,CAAC;MAChB,IAAIa,WAAW,CAACE,KAAK,EAAE;QACrBF,WAAW,CAACE,KAAK,CAACC,UAAU,CAAC,CAAC;MAChC;IACF,CAAC;IAED,MAAMC,iBAAgB,GAAIA,CAAA,KAAM;MAC9B,IAAIN,YAAY,CAACI,KAAK,EAAE;QACtB,MAAM,CAACG,IAAI,EAAEC,KAAK,IAAIR,YAAY,CAACI,KAAK,CAACK,KAAK,CAAC,GAAG,CAAC;QACnDR,WAAW,CAACG,KAAI,GAAI,GAAGG,IAAI,IAAIC,KAAK,GAAG;MACzC,OAAO;QACLP,WAAW,CAACG,KAAI,GAAI,EAAE;MACxB;MACAL,IAAI,CAAC,mBAAmB,EAAEC,YAAY,CAACI,KAAK,CAAC,EAAE;IACjD,CAAC;;IAED;IACAd,KAAK,CACH,MAAME,KAAK,CAACC,UAAU,EACrBiB,QAAQ,IAAK;MACZV,YAAY,CAACI,KAAI,GAAIM,QAAQ;MAC7BJ,iBAAiB,CAAC,CAAC,EAAE;IACvB,CACF,CAAC;IAED,OAAO;MACLN,YAAY;MACZC,WAAW;MACXC,WAAW;MACXC,YAAY;MACZG;IACF,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}