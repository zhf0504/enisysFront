{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_VTextField = _resolveComponent(\"VTextField\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_VTextField, {\n    class: \"custom-input\",\n    modelValue: $setup.displayDate,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.displayDate = $event),\n    placeholder: \"年月\",\n    type: \"text\",\n    \"append-inner-icon\": \"mdi-calendar-month\",\n    \"hide-details\": \"\",\n    readonly: true,\n    onClick: $setup.openCalendar\n  }, null, 8 /* PROPS */, [\"modelValue\", \"onClick\"]), _withDirectives(_createElementVNode(\"input\", {\n    class: \"custom-input\",\n    ref: \"monthPicker\",\n    type: \"month\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.selectedDate = $event),\n    onInput: _cache[2] || (_cache[2] = (...args) => $setup.updateDisplayDate && $setup.updateDisplayDate(...args)),\n    style: {\n      \"opacity\": \"0\",\n      \"position\": \"absolute\",\n      \"width\": \"0\",\n      \"height\": \"0\"\n    }\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelText, $setup.selectedDate]])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementBlock","_Fragment","_createVNode","_component_VTextField","class","modelValue","$setup","displayDate","_cache","$event","placeholder","type","readonly","onClick","openCalendar","_createElementVNode","ref","selectedDate","onInput","args","updateDisplayDate","style"],"sources":["C:\\Users\\zhenghoufeng\\Desktop\\project\\enisysFront1\\src\\components\\calendar\\monthPicker.vue"],"sourcesContent":["<template>\r\n  <VTextField\r\n    class=\"custom-input\"\r\n    v-model=\"displayDate\"\r\n    placeholder=\"年月\"\r\n    type=\"text\"\r\n    append-inner-icon=\"mdi-calendar-month\"\r\n    hide-details\r\n    :readonly=\"true\"\r\n    @click=\"openCalendar\"\r\n  />\r\n  <input\r\n    class=\"custom-input\"\r\n    ref=\"monthPicker\"\r\n    type=\"month\"\r\n    v-model=\"selectedDate\"\r\n    @input=\"updateDisplayDate\"\r\n    style=\"opacity: 0; position: absolute; width: 0; height: 0\"\r\n  />\r\n</template>\r\n\r\n<script>\r\n  import { ref, nextTick, watch } from 'vue';\r\n\r\n  export default {\r\n    name: 'MonthPicker',\r\n    props: {\r\n      modelValue: {\r\n        type: String,\r\n        default: ''\r\n      }\r\n    },\r\n    emits: ['update:modelValue'],\r\n    setup(props, { emit }) {\r\n      const selectedDate = ref(props.modelValue); // 初期値として親から受け取った値を使用\r\n      const displayDate = ref('');\r\n      const monthPicker = ref(null);\r\n      const openCalendar = async () => {\r\n        await nextTick();\r\n        if (monthPicker.value) {\r\n          monthPicker.value.showPicker();\r\n        }\r\n      };\r\n\r\n      const updateDisplayDate = () => {\r\n        if (selectedDate.value) {\r\n          const [year, month] = selectedDate.value.split('-');\r\n          displayDate.value = `${year}年${month}月`;\r\n        } else {\r\n          displayDate.value = '';\r\n        }\r\n        emit('update:modelValue', selectedDate.value); // 親コンポーネントに選択した値を送信\r\n      };\r\n\r\n      // props.modelValueが変更されたときにselectedDateを更新\r\n      watch(\r\n        () => props.modelValue,\r\n        (newValue) => {\r\n          selectedDate.value = newValue;\r\n          updateDisplayDate(); // 表示も更新\r\n        }\r\n      );\r\n\r\n      return {\r\n        selectedDate,\r\n        displayDate,\r\n        monthPicker,\r\n        openCalendar,\r\n        updateDisplayDate\r\n      };\r\n    }\r\n  };\r\n</script>\r\n\r\n<style scoped>\r\n  .v-input__append-inner {\r\n    display: none;\r\n  }\r\n\r\n  .custom-input {\r\n    padding-right: 0;\r\n  }\r\n\r\n  input[type='month']::-webkit-calendar-picker-indicator {\r\n    display: none;\r\n  }\r\n</style>\r\n"],"mappings":";;;uBAAAA,mBAAA,CAAAC,SAAA,SACEC,YAAA,CASEC,qBAAA;IARAC,KAAK,EAAC,cAAc;IAFxBC,UAAA,EAGaC,MAAA,CAAAC,WAAW;IAHxB,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAGaH,MAAA,CAAAC,WAAW,GAAAE,MAAA;IACpBC,WAAW,EAAC,IAAI;IAChBC,IAAI,EAAC,MAAM;IACX,mBAAiB,EAAC,oBAAoB;IACtC,cAAY,EAAZ,EAAY;IACXC,QAAQ,EAAE,IAAI;IACdC,OAAK,EAAEP,MAAA,CAAAQ;sEAEVC,mBAAA,CAOE;IANAX,KAAK,EAAC,cAAc;IACpBY,GAAG,EAAC,aAAa;IACjBL,IAAI,EAAC,OAAO;IAdhB,uBAAAH,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAeaH,MAAA,CAAAW,YAAY,GAAAR,MAAA;IACpBS,OAAK,EAAAV,MAAA,QAAAA,MAAA,UAAAW,IAAA,KAAEb,MAAA,CAAAc,iBAAA,IAAAd,MAAA,CAAAc,iBAAA,IAAAD,IAAA,CAAiB;IACzBE,KAA2D,EAA3D;MAAA;MAAA;MAAA;MAAA;IAAA;iEAFSf,MAAA,CAAAW,YAAY,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}